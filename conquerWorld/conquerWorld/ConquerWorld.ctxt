#BlueJ class context
comment0.target=ConquerWorld
comment0.text=\r\n\ Crea\ un\ mundo.\r\n\ \r\n\ @author\ (Natalia\ Palacios\ and\ Jonatan\ Gonzalez)\ \r\n\ @version\ (27/09/2018)\r\n
comment1.params=maxX\ maxY
comment1.target=ConquerWorld(int,\ int)
comment1.text=\r\n\ Constructor\ de\ Objetos\ de\ la\ clase\ ConquerWorld\r\n\ \ @param\ maxX.\ Indica\ el\ tama\u00F1o\ en\ X\ del\ tablero.\r\n\ \ @param\ maxY.\ Indica\ el\ tama\u00F1o\ en\ Y\ del\ tablero.\r\n
comment10.params=area
comment10.target=int[]\ calcularMedidasRectangle(int)
comment10.text=\r\n\ El\ metodo\ Calcula\ las\ medidas\ de\ una\ naci\u00F3n\ (Si\ es\ de\ tipo\ Rectangulo).\r\n\ \r\n\ @param\ area.\ Area\ que\ desea\ que\ tenga\ la\ nacion.\r\n\ \r\n\ @return\ ret.\ Retorna\ la\ lista\ con\ los\ valores\ de\ la\ altura\ y\ el\ ancho\ del\ rectangulo.\r\n
comment11.params=area
comment11.target=int\ calcularMedidasSquare(int)
comment11.text=\r\n\ El\ metodo\ Calcula\ las\ medidas\ de\ una\ naci\u00F3n\ (Si\ es\ de\ tipo\ Cuadrado).\r\n\ \r\n\ @param\ area.\ Area\ que\ desea\ que\ tenga\ la\ nacion.\r\n\ \r\n\ @return\ lado.\ Retorna\ el\ valor\ del\ lado\ del\ cuadrado.\r\n
comment12.params=area
comment12.target=int\ calcularMedidasTriangle(int)
comment12.text=\r\n\ El\ metodo\ Calcula\ las\ medidas\ de\ una\ naci\u00F3n\ (Si\ es\ de\ tipo\ Triangulo).\r\n\ \r\n\ @param\ area.\ Area\ que\ desea\ que\ tenga\ la\ nacion.\r\n\ \r\n\ @return\ lado.\ Retorna\ el\ valor\ del\ lado\ del\ triangulo.\r\n
comment13.params=area
comment13.target=int\ calcularMedidasCircle(int)
comment13.text=\r\n\ El\ metodo\ Calcula\ las\ medidas\ de\ una\ naci\u00F3n\ (Si\ es\ de\ tipo\ Circulo).\r\n\ \r\n\ @param\ area.\ Area\ que\ desea\ que\ tenga\ la\ nacion.\r\n\ \r\n\ @return\ diametro.\ Retorna\ el\ valor\ del\ diametro\ del\ circulo.\r\n
comment14.params=posX\ posY\ area
comment14.target=boolean\ estaEnElRangoRectangle(int,\ int,\ int)
comment14.text=\r\n\ Verifica\ que\ el\ objeto\ a\ ingresar\ este\ en\ el\ rango\ adecuado\ de\ la\ pantalla\ (Si\ el\ objeto\ es\ de\ tipo\ Rectangle).\r\n\ \r\n\ @param\ posX.\ Valor\ de\ la\ posicion\ x\ de\ la\ nacion.\r\n\ @param\ posY.\ Valor\ de\ la\ posicion\ y\ de\ la\ nacion.\r\n\ @param\ area.\ Valor\ del\ area\ de\ la\ nacion.\r\n\ \r\n\ @return\ flag.\ Retorna\ el\ valor\ booleano,\ dependiendo\ si\ el\ objeto\ esta\ en\ el\ rango\ adecuado\ o\ no.\r\n
comment15.params=posX\ posY\ area
comment15.target=boolean\ estaEnElRangoSquare(int,\ int,\ int)
comment15.text=\r\n\ Verifica\ que\ el\ objeto\ a\ ingresar\ este\ en\ el\ rango\ adecuado\ de\ la\ pantalla\ (Si\ el\ objeto\ es\ de\ tipo\ Square).\r\n\ \r\n\ @param\ posX.\ Valor\ de\ la\ posicion\ x\ de\ la\ nacion.\r\n\ @param\ posY.\ Valor\ de\ la\ posicion\ y\ de\ la\ nacion.\r\n\ @param\ area.\ Valor\ del\ area\ de\ la\ nacion.\r\n\ \r\n\ @return\ flag.\ Retorna\ el\ valor\ booleano,\ dependiendo\ si\ el\ objeto\ esta\ en\ el\ rango\ adecuado\ o\ no.\r\n
comment16.params=posX\ posY\ area
comment16.target=boolean\ estaEnElRangoTriangle(int,\ int,\ int)
comment16.text=\r\n\ Verifica\ que\ el\ objeto\ a\ ingresar\ este\ en\ el\ rango\ adecuado\ de\ la\ pantalla\ (Si\ el\ objeto\ es\ de\ tipo\ Triangle).\r\n\ \r\n\ @param\ posX.\ Valor\ de\ la\ posicion\ x\ de\ la\ nacion.\r\n\ @param\ posY.\ Valor\ de\ la\ posicion\ y\ de\ la\ nacion.\r\n\ @param\ area.\ Valor\ del\ area\ de\ la\ nacion.\r\n\ \r\n\ @return\ flag.\ Retorna\ el\ valor\ booleano,\ dependiendo\ si\ el\ objeto\ esta\ en\ el\ rango\ adecuado\ o\ no.\r\n
comment17.params=posX\ posY\ area
comment17.target=boolean\ estaEnElRangoCircle(int,\ int,\ int)
comment17.text=\r\n\ Verifica\ que\ el\ objeto\ a\ ingresar\ este\ en\ el\ rango\ adecuado\ de\ la\ pantalla\ (Si\ el\ objeto\ es\ de\ tipo\ Circle).\r\n\ \r\n\ @param\ posX.\ Valor\ de\ la\ posicion\ x\ de\ la\ nacion.\r\n\ @param\ posY.\ Valor\ de\ la\ posicion\ y\ de\ la\ nacion.\r\n\ @param\ area.\ Valor\ del\ area\ de\ la\ nacion.\r\n\ \r\n\ @return\ flag.\ Retorna\ el\ valor\ boleano,\ dependiendo\ si\ el\ objeto\ esta\ en\ el\ rango\ adecuado\ o\ no.\r\n
comment18.params=x\ y\ w\ h\ x2\ y2\ w2\ h2
comment18.target=boolean\ sonDisyuntosRectangle(int,\ int,\ int,\ int,\ int,\ int,\ int,\ int)
comment18.text=\r\n\ Verifica\ que\ la\ figura\ no\ se\ sobreponga\ a\ otra\ (Si\ el\ objeto\ es\ de\ tipo\ Rectangle).\r\n\ \r\n\ @param\ x.\ Indica\ la\ posicion\ en\ X\ de\ la\ primera\ figura.\r\n\ @param\ y.\ Indica\ la\ posicion\ en\ Y\ de\ la\ primera\ figura.\r\n\ @param\ w.\ Indica\ el\ ancho\ de\ la\ primera\ figura.\r\n\ @param\ h.\ Indica\ el\ alto\ de\ la\ primera\ figura.\r\n\ @param\ x2.\ Indica\ la\ posicion\ en\ X\ de\ la\ segunda\ figura.\r\n\ @param\ y2.\ Indica\ la\ posicion\ en\ Y\ de\ la\ segunda\ figura.\r\n\ @param\ w2.\ Indica\ el\ ancho\ de\ la\ segunda\ figura.\r\n\ @param\ h2.\ Indica\ el\ alto\ de\ la\ segunda\ figura.\r\n\ \r\n\ @return\ flag.\ Retorna\ el\ valor\ boleano,\ dependiendo\ si\ el\ objeto\ esta\ sobrepuesto\ a\ otro\ o\ no.\r\n
comment19.params=x\ y\ d\ x2\ y2\ w2\ h2
comment19.target=boolean\ sonDisyuntosCircle(int,\ int,\ int,\ int,\ int,\ int,\ int)
comment19.text=\r\n\ Verifica\ que\ la\ figura\ no\ se\ sobreponga\ a\ otra\ figura\ que\ no\ sea\ de\ su\ mismo\ tipo\ (Si\ el\ objeto\ es\ de\ tipo\ Circle).\r\n\ \r\n\ @param\ x.\ Indica\ la\ posicion\ en\ X\ de\ la\ primera\ figura.\r\n\ @param\ y.\ Indica\ la\ posicion\ en\ Y\ de\ la\ primera\ figura.\r\n\ @param\ d.\ Indica\ el\ diametro\ de\ la\ primera\ figura.\r\n\ @param\ x2.\ Indica\ la\ posicion\ en\ X\ de\ la\ segunda\ figura.\r\n\ @param\ y2.\ Indica\ la\ posicion\ en\ Y\ de\ la\ segunda\ figura.\r\n\ @param\ w2.\ Indica\ el\ ancho\ de\ la\ segunda\ figura.\r\n\ @param\ h2.\ Indica\ el\ alto\ de\ la\ segunda\ figura.\r\n\ \r\n\ @return\ flag.\ Retorna\ el\ valor\ boleano,\ dependiendo\ si\ el\ objeto\ esta\ sobrepuesto\ a\ otro\ o\ no.\r\n
comment2.params=value
comment2.target=void\ addCash(int)
comment2.text=\r\n\ El\ metodo\ Adiciona\ efectivo\ al\ presupuesto\ de\ batalla.\r\n\ \r\n\ @param\ value.\ Valor\ a\ adicionar\ al\ presupuesto\ de\ batalla.\r\n
comment20.params=x\ y\ d\ x2\ y2\ d2
comment20.target=boolean\ sonDisyuntosCircleCircle(int,\ int,\ int,\ int,\ int,\ int)
comment20.text=\r\n\ Verifica\ que\ la\ figura\ no\ se\ sobreponga\ a\ otra\ de\ su\ mismo\ tipo\ (Si\ el\ objeto\ es\ de\ tipo\ Circle).\r\n\ \r\n\ @param\ x.\ Indica\ la\ posicion\ en\ X\ de\ la\ primera\ figura.\r\n\ @param\ y.\ Indica\ la\ posicion\ en\ Y\ de\ la\ primera\ figura.\r\n\ @param\ d.\ Indica\ el\ diametro\ de\ la\ primera\ figura.\r\n\ @param\ x2.\ Indica\ la\ posicion\ en\ X\ de\ la\ segunda\ figura.\r\n\ @param\ y2.\ Indica\ la\ posicion\ en\ Y\ de\ la\ segunda\ figura.\r\n\ @param\ d2.\ Indica\ el\ diametro\ de\ la\ segunda\ figura.\r\n\ \r\n\ @return\ flag.\ Retorna\ el\ valor\ boleano,\ dependieno\ si\ el\ objeto\ esta\ sobrepuesto\ a\ otro\ o\ no.\r\n
comment21.params=x\ y\ x2\ y2\ w\ h
comment21.target=boolean\ estaAdentro(int,\ int,\ int,\ int,\ int,\ int)
comment21.text=\r\n\ Verifica\ que\ la\ figura\ no\ se\ encuentre\ dentro\ de\ otra.\r\n\ \r\n\ @param\ x.\ Indica\ la\ posicion\ en\ X\ de\ la\ primera\ figura.\r\n\ @param\ y.\ Indica\ la\ posicion\ en\ Y\ de\ la\ primera\ figura.\r\n\ @param\ x2.\ Indica\ la\ posicion\ en\ X\ de\ la\ segunda\ figura.\r\n\ @param\ y2.\ Indica\ la\ posicion\ en\ Y\ de\ la\ segunda\ figura.\r\n\ @param\ w.\ Indica\ el\ ancho\ de\ la\ figura.\r\n\ @param\ h.\ Indica\ el\ alto\ de\ la\ figura.\r\n\ \r\n\ @return\ flag.\ Retorna\ el\ valor\ boleano,\ dependieno\ si\ el\ objeto\ esta\ dentro\ de\ otro\ o\ no.\r\n
comment22.params=nations\ cost
comment22.target=void\ addRoute(java.lang.String[],\ int)
comment22.text=\r\n\ Agrega\ una\ ruta\ entre\ dos\ naciones.\r\n\ \r\n\ @param\ nations.\ Indica\ las\ dos\ naciones\ que\ une\ la\ ruta.\r\n\ @param\ cost.\ Indica\ el\ costo\ de\ pasar\ de\ cualquiera\ de\ las\ dos\ naciones\ a\ la\ otra.\r\n
comment23.params=x\ y\ x_padre\ y_padre
comment23.target=void\ union(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment23.text=\r\n\ Une\ las\ naciones\ mediante\ rutas.\r\n\ \r\n\ @param\ x.\ Nacion\ 1\r\n\ @param\ y.\ Nacion\ 2\r\n
comment24.params=x
comment24.target=java.lang.String\ padre(java.lang.String)
comment24.text=\r\n\ Mira\ con\ quien\ esta\ unida\ la\ nacion\ indicada\r\n\ \r\n\ @param\ x.\ Nacion\ de\ la\ cual\ se\ busca\ con\ quien\ esta\ unida.\ \r\n
comment25.params=nations\ nuevaRuta\ cost
comment25.target=void\ mapeoNaciones(java.lang.String[],\ Route,\ int)
comment25.text=\r\n\ Segun\ la\ figura\ se\ establece\ el\ alto\ y\ el\ ancho\ para\ poder\ enviar\ las\ coordenadas\ para\ la\ creacion\ de\ la\ ruta.\r\n\ \r\n\ @param\ nations.\ Naciones\ que\ une\ la\ ruta.\r\n\ @param\ nuevaRuta.\ Objeto\ ruta\ que\ se\ agrego\ al\ diccionario.\r\n
comment26.params=nation
comment26.target=void\ addArmy(java.lang.String)
comment26.text=\r\n\ Agrega\ un\ ejercito\ a\ la\ nacion\ dada.\r\n\ \r\n\ @param\ nation.\ Indica\ la\ nacion\ a\ la\ que\ se\ le\ va\ a\ anadir\ el\ ejercito.\r\n
comment27.params=nations
comment27.target=void\ addArmies(java.lang.String[])
comment27.text=\r\n\ Agrega\ los\ ejercitos\ a\ la\ naciones\ indicadas.\r\n\ \r\n\ @param\ nations.\ Indica\ las\ naciones\ a\ las\ que\ se\ les\ va\ a\ anadir\ el\ ejercito.\r\n
comment28.params=color
comment28.target=void\ removeNation(java.lang.String)
comment28.text=\r\n\ Remueve\ una\ nacion\ segun\ el\ color\ indicado.\r\n\ \r\n\ @param\ color.\ Indica\ el\ color\ de\ la\ nacion\ que\ se\ va\ a\ remover.\r\n
comment29.params=nations
comment29.target=void\ removeRoute(java.lang.String[])
comment29.text=\r\n\ Remueve\ la\ ruta\ que\ une\ a\ las\ naciones\ indicadas.\r\n\ \r\n\ @param\ nations.\ Indica\ las\ naciones\ unidas\ por\ la\ ruta\ que\ se\ quiere\ remover.\r\n
comment3.params=
comment3.target=void\ marcoPresupuesto()
comment3.text=\r\n\ El\ metodo\ crea\ un\ marco\ en\ la\ parte\ izquierda\ del\ tablero,\ que\ aumenta\ con\ el\ ingreso\ del\ dinero.\r\n
comment30.params=nation
comment30.target=void\ removeArmies(java.lang.String)
comment30.text=\r\n\ Remueve\ el\ ejercito\ de\ la\ nacion\ indicada.\r\n\ \r\n\ @param\ nation.\ Indica\ la\ nacion\ de\ la\ que\ hay\ que\ remover\ el\ ejercito.\r\n
comment31.params=fromNation\ toNation
comment31.target=void\ moveArmy(java.lang.String,\ java.lang.String)
comment31.text=\r\n\ Mueve\ el\ ejercito\ de\ una\ nacion\ a\ otra.\r\n\ \r\n\ @param\ fromNation.\ Indica\ la\ nacion\ donde\ esta\ actualmente\ el\ ejercito.\r\n\ @param\ toNation.\ Indica\ la\ nacion\ a\ donde\ se\ mueve\ el\ ejercito.\r\n
comment32.params=
comment32.target=void\ formarGrafo()
comment33.params=fromNation\ toNation
comment33.target=int\ dijkstra(java.lang.String,\ java.lang.String)
comment34.params=dist\ sptset
comment34.target=java.lang.String\ minDistance(java.util.HashMap,\ java.util.HashMap)
comment35.params=
comment35.target=void\ moveArmy()
comment35.text=\r\n\ Mueve\ el\ ejercito\ de\ forma\ estrategica.\r\n
comment36.params=nations
comment36.target=boolean\ okRoute(java.lang.String[])
comment36.text=\r\n\ Indica\ si\ ya\ existe\ una\ ruta\ entre\ las\ dos\ naciones\ que\ quiero\ unir.\r\n\ \r\n\ @param\ nations.\ Naciones\ que\ voy\ a\ unir.\r\n\ \r\n\ @return.\ Retorna\ si\ es\ posible\ que\ pueda\ crear\ la\ ruta\ o\ no.\ True\ en\ caso\ de\ no\ existir\ una\ ruta.\r\n\ \ \ \ \ \ \ \ \ \ False\ en\ caso\ de\ existir\ una\ ruta.\r\n
comment37.params=
comment37.target=boolean\ okRoutes()
comment37.text=\r\n\ \ Revisa\ que\ las\ rutas\ cumplan\ los\ requisitos.\r\n\ \ \r\n\ \ @return.\ Retorna\ si\ las\ rutas\ cumplen\ los\ requisitos\ o\ no.\ \r\n
comment38.params=
comment38.target=void\ makeVisible()
comment38.text=\r\n\ Hace\ visible\ el\ simulador.\r\n
comment39.params=
comment39.target=void\ makeInvisible()
comment39.text=\r\n\ Hace\ invisible\ el\ simulador.\ (Tiene\ que\ seguir\ funcionando)\r\n
comment4.params=shape\ area\ color\ position\ armiesNeeded
comment4.target=void\ addNation(java.lang.String,\ int,\ java.lang.String,\ int[],\ int)
comment4.text=\r\n\ El\ metodo\ Adiciona\ una\ naci\u00F3n.\ \r\n\ \r\n\ @param\ shape.\ Forma\ en\ que\ desea\ adicionar\ la\ nacion.\ Figuras\ validas\:\ "Rectangle",\ "Square",\ "Circle",\ "Triangle".\r\n\ @param\ area.\ Area\ que\ desea\ que\ tenga\ la\ nacion.\r\n\ @param\ color.\ Color\ que\ desea\ que\ tenga\ la\ nacion.\ Colores\ validos\:\ "red","blue","yellow","green","magenta","white","gray","lightGray","darkGray","pink","orange","cyan","salmon","aquamarine","purple","chocolate","beige","lila","brown".\r\n\ @param\ posX.\ Posicion\ X\ en\ la\ que\ quiere\ ubbicar\ la\ nacion.\r\n\ @param\ posY.\ Posicion\ Y\ en\ la\ que\ quiere\ ubbicar\ la\ nacion.\r\n\ @param\ armiesNeeded.\ Ejercitos\ que\ necesita\ en\ la\ nacion.\r\n
comment40.params=
comment40.target=void\ finish()
comment40.text=\r\n\ Finaliza\ el\ simulador.\r\n
comment41.params=
comment41.target=boolean\ ok()
comment41.text=\r\n\ Verifica\ que\ las\ instrucciones\ dadas\ se\ cumplan.\r\n\ \r\n\ @return.\ Retorna\ si\ la\ ultima\ operacion\ se\ pudo\ realizar\ o\ no.\r\n
comment42.params=c
comment42.target=void\ zoom(char)
comment42.text=\r\n\ Aumenta\ o\ disminuye\ el\ tama\u00F1o\ del\ tablero.\r\n\ \r\n\ @param\ c.\ "+"\ indica\ el\ aumento\ en\ el\ tamano\ del\ tablero\ y\ "-"\ indica\ la\ disminucion\ del\ tamano.\ \r\n
comment43.params=
comment43.target=java.lang.String[]\ nations()
comment43.text=\r\n\ Consulta\ las\ naciones\ existentes\ en\ el\ mundo.\r\n\ @return\ La\ lista\ de\ las\ naciones\ existentes.\r\n
comment44.params=
comment44.target=java.lang.String[][]\ routes()
comment44.text=\r\n\ Consulta\ las\ rutas\ existentes\ en\ el\ mundo.\r\n\ @return\ Las\ rutas\ existentes.\r\n
comment45.params=nation
comment45.target=java.lang.String[]\ routes(java.lang.String)
comment45.text=\r\n\ Consulta\ las\ rutas\ que\ tiene\ una\ nacion\ dada.\r\n\ @param\ nation.\ Indica\ la\ nacion\ de\ la\ que\ se\ quieren\ conocer\ las\ rutas.\r\n\ @return\ La\ lista\ de\ rutas\ de\ la\ nacion.\r\n
comment5.params=shape\ area\ color\ position\ armiesNeeded\ type
comment5.target=void\ addNation(java.lang.String,\ int,\ java.lang.String,\ int[],\ int,\ java.lang.String)
comment5.text=\r\n\ El\ metodo\ Adiciona\ una\ naci\u00F3n.\ \r\n\ \r\n\ @param\ shape.\ Forma\ en\ que\ desea\ adicionar\ la\ nacion.\ Figuras\ validas\:\ "Rectangle",\ "Square",\ "Circle",\ "Triangle".\r\n\ @param\ area.\ Area\ que\ desea\ que\ tenga\ la\ nacion.\r\n\ @param\ color.\ Color\ que\ desea\ que\ tenga\ la\ nacion.\ Colores\ validos\:\ "red","blue","yellow","green","magenta","white","gray","lightGray","darkGray","pink","orange","cyan","salmon","aquamarine","purple","chocolate","beige","lila","brown".\r\n\ @param\ posX.\ Posicion\ X\ en\ la\ que\ quiere\ ubbicar\ la\ nacion.\r\n\ @param\ posY.\ Posicion\ Y\ en\ la\ que\ quiere\ ubbicar\ la\ nacion.\r\n\ @param\ armiesNeeded.\ Ejercitos\ que\ necesita\ en\ la\ nacion.\r\n
comment6.params=rango\ posX\ posY\ area
comment6.target=boolean\ addNationRectangle(boolean,\ int,\ int,\ int)
comment6.text=\r\n\ El\ metodo\ Adiciona\ una\ naci\u00F3n\ (Si\ es\ de\ tipo\ Rectangulo).\ \r\n\ \r\n\ @param\ rango.\ Indica\ true\ si\ no\ se\ sobrepasa\ del\ rango\ del\ tablero.\ \r\n\ @param\ posX.\ Indica\ la\ posicion\ X\ en\ la\ que\ quiere\ ubicar\ la\ nacion.\r\n\ @param\ posY.\ Indica\ la\ posicion\ Y\ en\ la\ que\ quiere\ ubicar\ la\ nacion.\r\n\ @param\ area.\ Area\ que\ desea\ que\ tenga\ la\ nacion.\r\n\ \r\n\ @return\ rango.\ Retorna\ true\ si\ la\ nacion\ no\ se\ sobrepone\ a\ ninguna\ otra\ y\ no\ se\ sale\ del\ rango\ del\ tablero.\r\n
comment7.params=rango\ posX\ posY\ area
comment7.target=boolean\ addNationSquare(boolean,\ int,\ int,\ int)
comment7.text=\r\n\ El\ metodo\ Adiciona\ una\ naci\u00F3n\ (Si\ es\ de\ tipo\ Cuadrado).\ \r\n\ \r\n\ @param\ rango.\ Indica\ true\ si\ no\ se\ sobrepasa\ del\ rango\ del\ tablero.\r\n\ @param\ posX.\ Indica\ la\ posicion\ X\ en\ la\ que\ quiere\ ubicar\ la\ nacion.\r\n\ @param\ posY.\ Indica\ la\ posicion\ Y\ en\ la\ que\ quiere\ ubicar\ la\ nacion.\r\n\ @param\ area.\ Area\ que\ desea\ que\ tenga\ la\ nacion.\r\n\ \r\n\ @return\ rango.\ Retorna\ true\ si\ la\ nacion\ no\ se\ sobrepone\ a\ ninguna\ otra\ y\ no\ se\ sale\ del\ rango\ del\ tablero.\r\n
comment8.params=rango\ posX\ posY\ area
comment8.target=boolean\ addNationTriangle(boolean,\ int,\ int,\ int)
comment8.text=\r\n\ El\ metodo\ Adiciona\ una\ nacion\ (Si\ es\ de\ tipo\ Triangulo).\ \r\n\ \r\n\ @param\ rango.\ Indica\ true\ si\ no\ se\ sobrepasa\ del\ rango\ del\ tablero.\r\n\ @param\ posX.\ Indica\ la\ posicion\ X\ en\ la\ que\ quiere\ ubicar\ la\ nacion.\r\n\ @param\ posY.\ Indica\ la\ posicion\ Y\ en\ la\ que\ quiere\ ubicar\ la\ nacion.\r\n\ @param\ area.\ Area\ que\ desea\ que\ tenga\ la\ nacion.\r\n\ \r\n\ @return\ rango.\ Retorna\ true\ si\ la\ nacion\ no\ se\ sobrepone\ a\ ninguna\ otra\ y\ no\ se\ sale\ del\ rango\ del\ tablero.\r\n
comment9.params=rango\ posX\ posY\ area
comment9.target=boolean\ addNationCircle(boolean,\ int,\ int,\ int)
comment9.text=\r\n\ El\ metodo\ Adiciona\ una\ nacion\ (Si\ es\ de\ tipo\ Circulo).\ \r\n\ \r\n\ @param\ rango.\ Indica\ true\ si\ no\ se\ sobrepasa\ del\ rango\ del\ tablero.\r\n\ @param\ posX.\ Indica\ la\ posicion\ X\ en\ la\ que\ quiere\ ubicar\ la\ nacion.\r\n\ @param\ posY.\ Indica\ la\ posicion\ Y\ en\ la\ que\ quiere\ ubicar\ la\ nacion.\r\n\ @param\ area.\ Area\ que\ desea\ que\ tenga\ la\ nacion.\r\n\ \r\n\ @return\ rango.\ Retorna\ true\ si\ la\ nacion\ no\ se\ sobrepone\ a\ ninguna\ otra\ y\ no\ se\ sale\ del\ rango\ del\ tablero.\r\n
numComments=46
